#!/usr/bin/env python
PACKAGE = "target_tracker_distributed_kf"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("posGlobalOffsetBiasX", double_t, 0, "posGlobalOffsetBiasX", 0,  -25, 25)
gen.add("posGlobalOffsetBiasY", double_t, 0, "posGlobalOffsetBiasY", 0,  -25, 25)
gen.add("posGlobalOffsetBiasZ", double_t, 0, "posGlobalOffsetBiasZ", 0,  -25, 25)

gen.add("noisePosXVar", double_t, 0, "noisePosXVar", 0.5,  0, 5)
gen.add("noisePosYVar", double_t, 0, "noisePosYVar", 0.5,  0, 5)
gen.add("noisePosZVar", double_t, 0, "noisePosZVar", 0.4,  0, 5)


gen.add("noiseVelXVar", double_t, 0, "noiseVelXVar", 0.3,  0, 20)
gen.add("noiseVelYVar", double_t, 0, "noiseVelYVar", 0.3,  0, 20)
gen.add("noiseVelZVar", double_t, 0, "noiseVelZVar", 0.3,  0, 20)

gen.add("noiseOffXVar", double_t, 0, "noiseOffXVar", 0.3,  0, 20)
gen.add("noiseOffYVar", double_t, 0, "noiseOffYVar", 0.3,  0, 20)
gen.add("noiseOffZVar", double_t, 0, "noiseOffZVar", 0.3,  0, 20)

gen.add("velocityDecayTime", double_t, 0, "velocityDecayTime", 3.0, 0.0, 10.0)
gen.add("offsetDecayTime", double_t, 0, "offsetDecayTime", 30.0, 0.0, 300.0)

gen.add("falsePositiveThresholdSigma", double_t, 0, "falsePositiveThresholdSigma", 6.0, 0.0, 50.0)

exit(gen.generate(PACKAGE, "target_tracker", "KalmanFilterParams"))
